#knn with k=10
#predict the class using dataset,compare the actual value and the prediction to check accuracy
#observaion-smaller the k value y=the prediction is more accurate
 {
 
 
 stddev=function(y)
 {
 i=1
 ds<-read.csv("cleveland_data.csv",header=FALSE)
 mean=0
 while(i<=303)
 {
 mean=mean+ds[i,y]
 i=i+1
 }
 mean=mean/303
 i=1
 std=0
 while(i<=303)
 {
 std=std+((ds[i,y]-mean)*(ds[i,y]-mean))
 i=i+1
 }
 std=std/302;
 return (std)
 }
 i=1
 stdv=rep(0,times=13)
 while(i<=13)
 {
 stdv[i]=stddev(i)
 i=i+1
 }
 
 
 
 
 
 x=1
 correct=0
 while(x<=303)
 {
 #put the value of i which is the ith row in dataset to predict
 #put k
 #best value of k is sqrt of the number of samples ie sqrt(303)=17
 k=17
 z=x
 i=z
 ds<-read.csv("cleveland_data.csv",header=FALSE)
 datatopredict <-c(ds[i,1],ds[i,2],ds[i,3],ds[i,4],ds[i,5],ds[i,6],ds[i,7],ds[i,8],ds[i,9],ds[i,10],ds[i,11],ds[i,12],ds[i,13])
 uplimit<-303
 #array declarations
 euc<-rep(0,times=303)
 pos<-rep(0,times=303)
  
 #clacluate euclidian distances
 i=1
 while(i<=uplimit)
 {
 
 for(j in 1:13)  euc[i]=euc[i]+((ds[i,j]-datatopredict[j])^2/stdv[j])
 euc[i]=sqrt(euc[i])
 pos[i]=i
 
 
 i=i+1
 }
 
 #sort the eucludian distances 
 #dont use for loop if there is a 'if' involved
 i=1
 while(i<=uplimit-1)
 {
 j=1
 while(j<=uplimit-i)
 {
 if(euc[j]>euc[j+1])
 {
 temp<-euc[j]
 euc[j]<-euc[j+1]
 euc[j+1]<-temp
 temp<-pos[j]
 pos[j]<-pos[j+1]
 pos[j+1]<-temp
 }
 j=j+1}
 i=i+1}
 #for(i in 1:10) cat("\n",pos[i],ds[pos[i],14],euc[i])
 #classify for k  nearest euc distances
 
 val<-rep(0,times=5)
 #the for loop starts from 2 because the shortest euc distance is 0.ie 
 #the distance with itself which must not be considerd
 for(i in 2:(k+1))
 {
 if(ds[pos[i],14]==0) val[1]=val[1]+1
 if(ds[pos[i],14]==1) val[2]=val[2]+1
 
 }
 #cat("\n",val[1],val[2],val[3],val[4],val[5],"\n")
 #find which class has the highest instances
 if(val[1]>=val[2])pos=1
 else pos=2
 cat("\nthe predicted class is ",pos-1," vs the actual class which is ",ds[z,14] )
 if(pos-1==ds[z,14])correct=correct+1
 x=x+1
 }
 cat("\nthe accuracy is ",correct/303*100)
 }
